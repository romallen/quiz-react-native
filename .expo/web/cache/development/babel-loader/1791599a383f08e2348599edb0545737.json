{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Card from \"../components/Cards\";\nimport QuestionOverlay from \"../components/questionOverlay\";\nimport Header from \"../components/headers\";\nimport { useState, createRef, useEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { Button, Overlay } from \"react-native-elements\";\nimport { FlatGrid } from 'react-native-super-grid';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar w, h;\nexport default function PlayScreen(props) {\n  var _useWindowDimensions = useWindowDimensions(),\n      height = _useWindowDimensions.height,\n      width = _useWindowDimensions.width;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSelected = _useState2[0],\n      setSelection = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cards = _useState4[0],\n      setCards = _useState4[1];\n\n  var _useState5 = useState({\n    isVisible: false\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cardOverlay = _useState6[0],\n      setCardOverlay = _useState6[1];\n\n  var _useState7 = useState({\n    windowWidth: width,\n    windowHeight: height,\n    data: []\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      gState = _useState8[0],\n      setGState = _useState8[1];\n\n  var data1 = [{\n    \"category\": \"React 101\",\n    \"questions\": [{\n      \"points\": 100,\n      \"question\": \"<p>What part of your application does React focus on?</p><ol><li>The Model</li><li>The View</li><li>The Controller</li><li>All of the above</li></ol>\",\n      \"answer\": \"B. The View\"\n    }, {\n      \"points\": 200,\n      \"question\": \"_____ lets you create JavaScript objects using HTML syntax\",\n      \"answer\": \"JSX\"\n    }, {\n      \"points\": 300,\n      \"question\": \"What tool can you use to transpile JSX?\",\n      \"answer\": \"Babel\"\n    }, {\n      \"points\": 400,\n      \"question\": \"React uses a _____________ to limit direct manipulation of the DOM and improve performance\",\n      \"answer\": \"Virtual DOM\"\n    }]\n  }, {\n    \"category\": \"React 201\",\n    \"questions\": [{\n      \"points\": 100,\n      \"question\": \"<p>Where can you define a component's initial state when you use the ES6 Class syntax?</p><ol><li>getInitialState()</li><li>getInitialProps()</li><li>The component's constructor</li></ol>\",\n      \"answer\": \"C. The component's constructor\"\n    }, {\n      \"points\": 200,\n      \"question\": \"Using npm, which package should you require/import in addition to 'react' to render a React component in an existing DOM element of your HTML file?\",\n      \"answer\": \"react-dom\"\n    }, {\n      \"points\": 300,\n      \"question\": \"<p>Which lifecycle function should you use to set default property values?</p><ol><li>getInitialState</li><li>getInitialProps</li><li>getDefaultProps</li></ol>\",\n      \"answer\": \"C. getDefaultProps\"\n    }, {\n      \"points\": 400,\n      \"question\": \"Which lifecycle method is invoked once, immediately after the initial rendering occurs?\",\n      \"answer\": \"componentDidMount\"\n    }]\n  }, {\n    \"category\": \"ES 2015\",\n    \"questions\": [{\n      \"points\": 100,\n      \"question\": \"<p>Constants (const) are:</p><ol><li>Block scoped</li><li>Function scoped</li><li>Global</li></ol>\",\n      \"answer\": \"A. Block scoped\"\n    }, {\n      \"points\": 200,\n      \"question\": \"Name 3 new collection classes in ES2015\",\n      \"answer\": \"<ul><li>Map</li><li>WeakMap</li><li>Set</li><li>WeakSet</li></ul>\"\n    }, {\n      \"points\": 300,\n      \"question\": \"<p>What's being logged and how is this new ES6 feature called?</p><code>var colors = ['red', 'blue', 'green'];<br/>var [primary, secondary, tertiary] = colors;<br/>console.log(secondary);</code>\",\n      \"answer\": \"<ul><li>blue</li><li>Array destructuring</li></ul>\"\n    }, {\n      \"points\": 400,\n      \"question\": \"<p>What's being logged and name 4 new features of ES6 used in this code snippet?</p><code>let greeting = (name, msg='Hello') => `${msg}, ${name}`;<br/>console.log(greeting('Christophe');</code>\",\n      \"answer\": \"<p>Hello, Christophe</p><ul><li>let variables</li><li>Arrow functions</li><li>Default parameters</li><li>Template strings</li></ul>\"\n    }]\n  }, {\n    \"category\": \"Feeling Lucky\",\n    \"questions\": [{\n      \"points\": 100,\n      \"question\": \"Using the proposed ECMAScript module syntax, how do you load the Mortgage.js module from the current directory and make all its members available in an object named mortgage?\",\n      \"answer\": \"<code>import * as mortgage from './Mortgage';</code>\"\n    }, {\n      \"points\": 200,\n      \"question\": \"What are the colors of the olympic rings?\",\n      \"answer\": \"<img src='assets/img/olympic_rings.png'/>\"\n    }, {\n      \"points\": 300,\n      \"question\": \"What's the date of the first React commit on GitHub?\",\n      \"answer\": \"May 26th, 2013\"\n    }, {\n      \"points\": 400,\n      \"question\": \"What's the hex color of the React logo?\",\n      \"answer\": \"#61DAFB\"\n    }]\n  }];\n  w = width;\n  h = height;\n  var state = createRef(null);\n  gState.data = data1;\n  gState.rows = gState.data[0].questions.length;\n  gState.cols = data1.length;\n  var cardWidth;\n  var boardHeight;\n  var cardHeight;\n  useEffect(function () {\n    gState.windowWidth = width;\n    gState.windowHeight = height;\n    var headerHeight = gState.windowWidth > 640 ? 60 : 32;\n    boardHeight = height - headerHeight;\n    cardWidth = gState.windowWidth / gState.cols;\n    cardHeight = (gState.windowHeight - headerHeight) / gState.rows;\n    handleResize(headerHeight, cardHeight, cardWidth);\n  }, [width, height]);\n\n  var handleResize = function handleResize(headerHeight, cardHeight, cardWidth) {\n    var card = [];\n    gState.data.forEach(function (category, categoryIndex) {\n      var column = [];\n      category.questions.forEach(function (question, questionIndex) {\n        var keys = categoryIndex + '-' + questionIndex;\n        column.push(_jsx(Card, {\n          setCardOverlay: setCardOverlay,\n          keys: keys,\n          height: cardHeight,\n          width: cardWidth,\n          question: question.question,\n          answer: question.answer,\n          points: question.points\n        }));\n      });\n      card.push(column);\n    });\n    setCards(card);\n  };\n\n  return _jsx(View, {\n    style: {\n      backgroundColor: '#fff'\n    },\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Header, {\n        windowWidth: gState.windowWidth,\n        data: gState.data,\n        headerWidth: cardWidth\n      }), _jsx(FlatGrid, {\n        itemDimension: gState.windowWidth / gState.cols - 20,\n        data: cards,\n        style: styles.gridView,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsx(View, {\n            children: item\n          });\n        }\n      }), _jsx(Overlay, {\n        children: cardOverlay.isVisible === true ? _jsx(QuestionOverlay, {\n          style: styles.overlay,\n          question: cardOverlay.question,\n          answer: cardOverlay.answer,\n          setCardOverlay: setCardOverlay,\n          width: \"90%\"\n        }) : null\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF'\n  },\n  gridView: {},\n  overlay: {\n    flex: 1,\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    opacity: 0.5,\n    backgroundColor: 'black'\n  },\n  button: {\n    fontSize: 40,\n    paddingBottom: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/romaineallen/codeC/ccp2/projects/quiz-react-native/app/screens/playScreen.js"],"names":["Card","QuestionOverlay","Header","useState","createRef","useEffect","Button","Overlay","FlatGrid","w","h","PlayScreen","props","useWindowDimensions","height","width","isSelected","setSelection","cards","setCards","isVisible","cardOverlay","setCardOverlay","windowWidth","windowHeight","data","gState","setGState","data1","state","rows","questions","length","cols","cardWidth","boardHeight","cardHeight","headerHeight","handleResize","card","forEach","category","categoryIndex","column","question","questionIndex","keys","push","answer","points","backgroundColor","styles","container","gridView","item","overlay","StyleSheet","create","flex","justifyContent","alignItems","position","left","top","opacity","button","fontSize","paddingBottom"],"mappings":";AAGA,OAAOA,IAAP;AACA,OAAOC,eAAP;AACA,OAAOC,MAAP;AACA,SAAQC,QAAR,EAAiBC,SAAjB,EAA4BC,SAA5B,QAA4C,OAA5C;;;;;;;AAEA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,uBAAhC;AACA,SAASC,QAAT,QAAyB,yBAAzB;;;AAEA,IAAIC,CAAJ,EAAMC,CAAN;AACA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACtC,6BAA0BC,mBAAmB,EAA7C;AAAA,MAAQC,MAAR,wBAAQA,MAAR;AAAA,MAAgBC,KAAhB,wBAAgBA,KAAhB;;AACA,kBAAmCZ,QAAQ,CAAC,EAAD,CAA3C;AAAA;AAAA,MAAOa,UAAP;AAAA,MAAmBC,YAAnB;;AACA,mBAA0Bd,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOe,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAsChB,QAAQ,CAAC;AAACiB,IAAAA,SAAS,EAAE;AAAZ,GAAD,CAA9C;AAAA;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AAKA,mBAA4BnB,QAAQ,CAAC;AAACoB,IAAAA,WAAW,EAAER,KAAd;AAAqBS,IAAAA,YAAY,EAAEV,MAAnC;AAA2CW,IAAAA,IAAI,EAAC;AAAhD,GAAD,CAApC;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AACJ,MAAIC,KAAK,GAAG,CACN;AACE,gBAAY,WADd;AAEE,iBAAa,CACX;AACE,gBAAU,GADZ;AAEE,kBAAY,uJAFd;AAGE,gBAAU;AAHZ,KADW,EAMX;AACE,gBAAU,GADZ;AAEE,kBAAY,4DAFd;AAGE,gBAAU;AAHZ,KANW,EAWX;AACE,gBAAU,GADZ;AAEE,kBAAY,yCAFd;AAGE,gBAAU;AAHZ,KAXW,EAgBX;AACE,gBAAU,GADZ;AAEE,kBAAY,4FAFd;AAGE,gBAAU;AAHZ,KAhBW;AAFf,GADM,EA0BN;AACE,gBAAY,WADd;AAEE,iBAAa,CACX;AACE,gBAAU,GADZ;AAEE,kBAAY,6LAFd;AAGE,gBAAU;AAHZ,KADW,EAMX;AACE,gBAAU,GADZ;AAEE,kBAAY,qJAFd;AAGE,gBAAU;AAHZ,KANW,EAWX;AACE,gBAAU,GADZ;AAEE,kBAAY,iKAFd;AAGE,gBAAU;AAHZ,KAXW,EAgBX;AACE,gBAAU,GADZ;AAEE,kBAAY,yFAFd;AAGE,gBAAU;AAHZ,KAhBW;AAFf,GA1BM,EAmDN;AACE,gBAAY,SADd;AAEE,iBAAa,CACX;AACE,gBAAU,GADZ;AAEE,kBAAY,oGAFd;AAGE,gBAAU;AAHZ,KADW,EAMX;AACE,gBAAU,GADZ;AAEE,kBAAY,yCAFd;AAGE,gBAAU;AAHZ,KANW,EAWX;AACE,gBAAU,GADZ;AAEE,kBAAY,oMAFd;AAGE,gBAAU;AAHZ,KAXW,EAgBX;AACE,gBAAU,GADZ;AAEE,kBAAY,mMAFd;AAGE,gBAAU;AAHZ,KAhBW;AAFf,GAnDM,EA4EN;AACE,gBAAY,eADd;AAEE,iBAAa,CACX;AACE,gBAAU,GADZ;AAEE,kBAAY,gLAFd;AAGE,gBAAU;AAHZ,KADW,EAMX;AACE,gBAAU,GADZ;AAEE,kBAAY,2CAFd;AAGE,gBAAU;AAHZ,KANW,EAWX;AACE,gBAAU,GADZ;AAEE,kBAAY,sDAFd;AAGE,gBAAU;AAHZ,KAXW,EAgBX;AACE,gBAAU,GADZ;AAEE,kBAAY,yCAFd;AAGE,gBAAU;AAHZ,KAhBW;AAFf,GA5EM,CAAZ;AAuGInB,EAAAA,CAAC,GAAEM,KAAH;AACAL,EAAAA,CAAC,GAACI,MAAF;AACA,MAAMe,KAAK,GAAGzB,SAAS,CAAC,IAAD,CAAvB;AAEAsB,EAAAA,MAAM,CAACD,IAAP,GAAeG,KAAf;AACAF,EAAAA,MAAM,CAACI,IAAP,GAAcJ,MAAM,CAACD,IAAP,CAAY,CAAZ,EAAeM,SAAf,CAAyBC,MAAvC;AACAN,EAAAA,MAAM,CAACO,IAAP,GAAcL,KAAK,CAACI,MAApB;AAIA,MAAIE,SAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,UAAJ;AACF/B,EAAAA,SAAS,CAAC,YAAI;AACZqB,IAAAA,MAAM,CAACH,WAAP,GAAoBR,KAApB;AACAW,IAAAA,MAAM,CAACF,YAAP,GAAqBV,MAArB;AAMA,QAAMuB,YAAY,GAAIX,MAAM,CAACH,WAAP,GAAsB,GAAtB,GAA4B,EAA5B,GAAiC,EAAvD;AACAY,IAAAA,WAAW,GAAGrB,MAAM,GAACuB,YAArB;AACAH,IAAAA,SAAS,GAAIR,MAAM,CAACH,WAAP,GAAqBG,MAAM,CAACO,IAAzC;AACAG,IAAAA,UAAU,GAAI,CAACV,MAAM,CAACF,YAAP,GAAsBa,YAAvB,IAAuCX,MAAM,CAACI,IAA5D;AAEAQ,IAAAA,YAAY,CAACD,YAAD,EAAeD,UAAf,EAA2BF,SAA3B,CAAZ;AAED,GAfQ,EAeP,CAACnB,KAAD,EAAQD,MAAR,CAfO,CAAT;;AAiBA,MAAIwB,YAAY,GAAG,SAAfA,YAAe,CAACD,YAAD,EAAeD,UAAf,EAA2BF,SAA3B,EAAwC;AAEzD,QAAIK,IAAI,GAAG,EAAX;AAEAb,IAAAA,MAAM,CAACD,IAAP,CAAYe,OAAZ,CAAoB,UAACC,QAAD,EAAWC,aAAX,EAA6B;AAC/C,UAAIC,MAAM,GAAG,EAAb;AACAF,MAAAA,QAAQ,CAACV,SAAT,CAAmBS,OAAnB,CAA2B,UAACI,QAAD,EAAWC,aAAX,EAA6B;AAEtD,YAAIC,IAAI,GAAGJ,aAAa,GAAG,GAAhB,GAAsBG,aAAjC;AACCF,QAAAA,MAAM,CAACI,IAAP,CAAY,KAAC,IAAD;AAAM,UAAA,cAAc,EAAEzB,cAAtB;AAAsC,UAAA,IAAI,EAAEwB,IAA5C;AAAkD,UAAA,MAAM,EAAEV,UAA1D;AAAsE,UAAA,KAAK,EAAEF,SAA7E;AAAwF,UAAA,QAAQ,EAAEU,QAAQ,CAACA,QAA3G;AAAqH,UAAA,MAAM,EAAEA,QAAQ,CAACI,MAAtI;AAA8I,UAAA,MAAM,EAAEJ,QAAQ,CAACK;AAA/J,UAAZ;AAEA,OALH;AAMAV,MAAAA,IAAI,CAACQ,IAAL,CAAUJ,MAAV;AACD,KATD;AAUAxB,IAAAA,QAAQ,CAACoB,IAAD,CAAR;AAEH,GAhBC;;AAmBE,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEW,MAAAA,eAAe,EAAE;AAAnB,KAAb;AAAA,cAEA,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,iBACA,KAAC,MAAD;AAAQ,QAAA,WAAW,EAAE1B,MAAM,CAACH,WAA5B;AAAyC,QAAA,IAAI,EAAEG,MAAM,CAACD,IAAtD;AAA4D,QAAA,WAAW,EAAES;AAAzE,QADA,EAEI,KAAC,QAAD;AACE,QAAA,aAAa,EAAGR,MAAM,CAACH,WAAP,GAAqBG,MAAM,CAACO,IAA7B,GAAmC,EADpD;AAEE,QAAA,IAAI,EAAEf,KAFR;AAGE,QAAA,KAAK,EAAEiC,MAAM,CAACE,QAHhB;AAIE,QAAA,UAAU,EAAE;AAAA,cAAGC,IAAH,QAAGA,IAAH;AAAA,iBACV,KAAC,IAAD;AAAA,sBACGA;AADH,YADU;AAAA;AAJd,QAFJ,EAYM,KAAC,OAAD;AAAA,kBACCjC,WAAW,CAACD,SAAZ,KAA0B,IAA1B,GAAiC,KAAC,eAAD;AAAiB,UAAA,KAAK,EAAE+B,MAAM,CAACI,OAA/B;AAAwC,UAAA,QAAQ,EAAIlC,WAAW,CAACuB,QAAhE;AAA0E,UAAA,MAAM,EAAIvB,WAAW,CAAC2B,MAAhG;AAAwG,UAAA,cAAc,EAAE1B,cAAxH;AAAwI,UAAA,KAAK,EAAE;AAA/I,UAAjC,GAA0L;AAD3L,QAZN;AAAA;AAFA,IADF;AAuBD;AAGD,IAAM6B,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITV,IAAAA,eAAe,EAAE;AAJR,GADoB;AAO/BG,EAAAA,QAAQ,EAAE,EAPqB;AAU/BE,EAAAA,OAAO,EAAE;AACPG,IAAAA,IAAI,EAAE,CADC;AAEPG,IAAAA,QAAQ,EAAE,UAFH;AAGPC,IAAAA,IAAI,EAAE,CAHC;AAIPC,IAAAA,GAAG,EAAE,CAJE;AAKPC,IAAAA,OAAO,EAAE,GALF;AAMPd,IAAAA,eAAe,EAAE;AANV,GAVsB;AAmB/Be,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,aAAa,EAAE,EAFT;AAGLP,IAAAA,UAAU,EAAE,QAHP;AAIND,IAAAA,cAAc,EAAE;AAJV;AAnBuB,CAAlB,CAAf","sourcesContent":["\n// import Card from \"../components/card\"\n\nimport Card from \"../components/Cards\"\nimport QuestionOverlay from '../components/questionOverlay';\nimport Header from \"../components/headers\"\nimport {useState,createRef, useEffect} from \"react\";\nimport { FlatList, StatusBar, StyleSheet, Text, View,useWindowDimensions } from \"react-native\";\nimport { Button, Overlay } from \"react-native-elements\";\nimport { FlatGrid } from 'react-native-super-grid';\n\nlet w,h\nexport default function PlayScreen(props) {\n    const { height, width } = useWindowDimensions();\n    const [isSelected, setSelection] = useState([]);\n    const [cards, setCards] = useState([]);\n    const [cardOverlay, setCardOverlay] = useState({isVisible: false})\n    // const [headerHeight, setHeaderHeight] = useState(0);\n    // const [cardWidth, setCardWidth] = useState(0);\n    // const [cardHeight, setCardHeight] = useState(0);\n\n    const [gState, setGState] = useState({windowWidth: width, windowHeight: height, data:[]})\nlet data1 = [\n      {\n        \"category\": \"React 101\",\n        \"questions\": [\n          {\n            \"points\": 100,\n            \"question\": \"<p>What part of your application does React focus on?</p><ol><li>The Model</li><li>The View</li><li>The Controller</li><li>All of the above</li></ol>\",\n            \"answer\": \"B. The View\"\n          },\n          {\n            \"points\": 200,\n            \"question\": \"_____ lets you create JavaScript objects using HTML syntax\",\n            \"answer\": \"JSX\"\n          },\n          {\n            \"points\": 300,\n            \"question\": \"What tool can you use to transpile JSX?\",\n            \"answer\": \"Babel\"\n          },\n          {\n            \"points\": 400,\n            \"question\": \"React uses a _____________ to limit direct manipulation of the DOM and improve performance\",\n            \"answer\": \"Virtual DOM\"\n          }\n        ]\n      },\n      {\n        \"category\": \"React 201\",\n        \"questions\": [\n          {\n            \"points\": 100,\n            \"question\": \"<p>Where can you define a component's initial state when you use the ES6 Class syntax?</p><ol><li>getInitialState()</li><li>getInitialProps()</li><li>The component's constructor</li></ol>\",\n            \"answer\": \"C. The component's constructor\"\n          },\n          {\n            \"points\": 200,\n            \"question\": \"Using npm, which package should you require/import in addition to 'react' to render a React component in an existing DOM element of your HTML file?\",\n            \"answer\": \"react-dom\"\n          },\n          {\n            \"points\": 300,\n            \"question\": \"<p>Which lifecycle function should you use to set default property values?</p><ol><li>getInitialState</li><li>getInitialProps</li><li>getDefaultProps</li></ol>\",\n            \"answer\": \"C. getDefaultProps\"\n          },\n          {\n            \"points\": 400,\n            \"question\": \"Which lifecycle method is invoked once, immediately after the initial rendering occurs?\",\n            \"answer\": \"componentDidMount\"\n          }\n        ]\n      },\n      {\n        \"category\": \"ES 2015\",\n        \"questions\": [\n          {\n            \"points\": 100,\n            \"question\": \"<p>Constants (const) are:</p><ol><li>Block scoped</li><li>Function scoped</li><li>Global</li></ol>\",\n            \"answer\": \"A. Block scoped\"\n          },\n          {\n            \"points\": 200,\n            \"question\": \"Name 3 new collection classes in ES2015\",\n            \"answer\": \"<ul><li>Map</li><li>WeakMap</li><li>Set</li><li>WeakSet</li></ul>\"\n          },\n          {\n            \"points\": 300,\n            \"question\": \"<p>What's being logged and how is this new ES6 feature called?</p><code>var colors = ['red', 'blue', 'green'];<br/>var [primary, secondary, tertiary] = colors;<br/>console.log(secondary);</code>\",\n            \"answer\": \"<ul><li>blue</li><li>Array destructuring</li></ul>\"\n          },\n          {\n            \"points\": 400,\n            \"question\": \"<p>What's being logged and name 4 new features of ES6 used in this code snippet?</p><code>let greeting = (name, msg='Hello') => `${msg}, ${name}`;<br/>console.log(greeting('Christophe');</code>\",\n            \"answer\": \"<p>Hello, Christophe</p><ul><li>let variables</li><li>Arrow functions</li><li>Default parameters</li><li>Template strings</li></ul>\"\n          }\n        ]\n      },\n      {\n        \"category\": \"Feeling Lucky\",\n        \"questions\": [\n          {\n            \"points\": 100,\n            \"question\": \"Using the proposed ECMAScript module syntax, how do you load the Mortgage.js module from the current directory and make all its members available in an object named mortgage?\",\n            \"answer\": \"<code>import * as mortgage from './Mortgage';</code>\"\n          },\n          {\n            \"points\": 200,\n            \"question\": \"What are the colors of the olympic rings?\",\n            \"answer\": \"<img src='assets/img/olympic_rings.png'/>\"\n          },\n          {\n            \"points\": 300,\n            \"question\": \"What's the date of the first React commit on GitHub?\",\n            \"answer\": \"May 26th, 2013\"\n          },\n          {\n            \"points\": 400,\n            \"question\": \"What's the hex color of the React logo?\",\n            \"answer\": \"#61DAFB\"\n          }\n        ]\n      }\n    ];\n     \n    w =width\n    h=height\n    const state = createRef(null)\n\n    gState.data  = data1\n    gState.rows = gState.data[0].questions.length\n    gState.cols = data1.length\n   \n\n\n    let cardWidth;\n    let boardHeight;\n    let cardHeight\n  useEffect(()=>{\n    gState.windowWidth= width\n    gState.windowHeight= height\n    \n    // setHeaderHeight(gState.windowWidth  / gState.cols);\n    // setCardWidth(gState.windowWidth / gState.cols);\n    // setCardHeight((gState.windowHeight - headerHeight) / gState.rows);\n\n    const headerHeight = (gState.windowWidth  > 640 ? 60 : 32);\n    boardHeight = height-headerHeight\n    cardWidth = (gState.windowWidth / gState.cols);\n    cardHeight = ((gState.windowHeight - headerHeight) / gState.rows);\n    // console.log(width,gState.windowWidth)\n    handleResize(headerHeight, cardHeight, cardWidth)\n    \n  },[width, height])\n  \n  let handleResize = (headerHeight, cardHeight, cardWidth) =>{\n    \n    let card = []\n\n    gState.data.forEach((category, categoryIndex) => {\n      let column = []\n      category.questions.forEach((question, questionIndex) => {\n        // console.log(\"cards\",cardHeight, cardWidth)\n        let keys = categoryIndex + '-' + questionIndex\n         column.push(<Card setCardOverlay={setCardOverlay} keys={keys} height={cardHeight} width={cardWidth} question={question.question} answer={question.answer} points={question.points}/>)\n  \n        })\n      card.push(column)\n    });\n    setCards(card)\n\n}\n\n \n    return (\n      <View style={{ backgroundColor: '#fff'}}> \n     \n      <View style={styles.container}>\n      <Header windowWidth={gState.windowWidth} data={gState.data} headerWidth={cardWidth}/>\n          <FlatGrid \n            itemDimension={(gState.windowWidth / gState.cols)-20}\n            data={cards}\n            style={styles.gridView}\n            renderItem={({ item }) => (\n              <View >\n                {item}\n              </View>\n            )}\n            />\n            <Overlay>\n            {cardOverlay.isVisible === true ? <QuestionOverlay style={styles.overlay} question = {cardOverlay.question} answer = {cardOverlay.answer} setCardOverlay={setCardOverlay} width={\"90%\"}/>: null}\n\n            </Overlay>\n      </View>\n      \n      </View>\n    );\n  }\n\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#F5FCFF',\n    },\n    gridView: {\n      // height: h-10\n    },\n    overlay: {\n      flex: 1,\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      opacity: 0.5,\n      backgroundColor: 'black',\n\n    },\n    button: {\n      fontSize: 40,\n      paddingBottom: 20,\n       alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n\n  });"]},"metadata":{},"sourceType":"module"}