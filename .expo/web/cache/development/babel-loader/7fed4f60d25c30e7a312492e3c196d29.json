{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as audio from \"./audio\";\nimport { React, useState, createRef } from \"react\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button } from \"react-native-elements\";\nimport CardFlip from 'react-native-card-flip';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function QuestionOverlay(props) {\n  var _useState = useState({\n    view: 'points',\n    completed: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      cardState = _useState2[0],\n      setCardState = _useState2[1];\n\n  var cardRef = createRef(null);\n\n  var handleClick = function handleClick() {\n    console.log(\"card Pressed\");\n    cardRef.current.flip();\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(CardFlip, {\n      style: styles.cardContainer,\n      ref: function ref(card) {\n        return cardRef.current = card;\n      },\n      children: [_jsx(TouchableOpacity, {\n        activeOpacity: 1,\n        style: [styles.card, styles.card1],\n        onPress: handleClick,\n        children: _jsx(Text, {\n          style: styles.label,\n          children: props.question\n        })\n      }), _jsx(TouchableOpacity, {\n        activeOpacity: 1,\n        style: [styles.card, styles.card2],\n        onPress: handleClick,\n        children: _jsx(Text, {\n          style: styles.label,\n          children: props.answer\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF'\n  },\n  cardContainer: {\n    width: 730,\n    height: 550\n  },\n  card: {\n    width: 530,\n    height: 450,\n    backgroundColor: '#FE474C',\n    borderRadius: 5,\n    shadowColor: 'rgba(0,0,0,0.5)',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.5\n  },\n  card1: {\n    backgroundColor: '#FE474C'\n  },\n  card2: {\n    backgroundColor: '#FEB12C'\n  },\n  label: {\n    lineHeight: 47,\n    textAlign: 'center',\n    fontSize: 15,\n    fontFamily: 'System',\n    color: '#ffffff',\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"sources":["/Users/romaineallen/codeC/ccp2/projects/quiz-react-native/app/components/questionOverlay.js"],"names":["audio","React","useState","createRef","Button","CardFlip","QuestionOverlay","props","view","completed","cardState","setCardState","cardRef","handleClick","console","log","current","flip","styles","container","cardContainer","card","card1","label","question","card2","answer","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","width","height","borderRadius","shadowColor","shadowOffset","shadowOpacity","lineHeight","textAlign","fontSize","fontFamily","color"],"mappings":"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","sourcesContent":["\nimport * as audio from './audio';\nimport {React, useState, createRef} from \"react\";\nimport { StatusBar, StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\nimport { Button} from \"react-native-elements\";\nimport CardFlip from 'react-native-card-flip';\n\nexport default function QuestionOverlay(props) {\n    const [cardState, setCardState] = useState({view: 'points', completed: false})\n    const cardRef = createRef(null)\n  \n    const handleClick= () => {\n    console.log(\"card Pressed\");\n    cardRef.current.flip()\n  };\n\n\n\n  return (\n    <View style={styles.container}>\n      \n      <CardFlip style={styles.cardContainer} ref={card => (cardRef.current = card)}>\n        <TouchableOpacity\n          activeOpacity={1}\n          style={[styles.card, styles.card1]}\n          onPress={handleClick}>\n          <Text style={styles.label}>{props.question}</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          activeOpacity={1}\n          style={[styles.card, styles.card2]}\n          onPress={handleClick}>\n          <Text style={styles.label}>{props.answer}</Text>\n        </TouchableOpacity>\n      </CardFlip>\n   \n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#F5FCFF',\n    },\n    cardContainer: {\n      width: 730,\n      height: 550,\n    },\n    card: {\n      width: 530,\n      height: 450,\n      backgroundColor: '#FE474C',\n      borderRadius: 5,\n      shadowColor: 'rgba(0,0,0,0.5)',\n      shadowOffset: {\n        width: 0,\n        height: 1,\n      },\n      shadowOpacity: 0.5,\n    },\n    card1: {\n      backgroundColor: '#FE474C',\n    },\n    card2: {\n      backgroundColor: '#FEB12C',\n    },\n    label: {\n      lineHeight: 47,\n      textAlign: 'center',\n      fontSize: 15,\n      fontFamily: 'System',\n      color: '#ffffff',\n      backgroundColor: 'transparent',\n    },\n  });"]},"metadata":{},"sourceType":"module"}