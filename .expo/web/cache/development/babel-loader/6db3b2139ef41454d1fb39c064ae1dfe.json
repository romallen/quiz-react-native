{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport computeProps from \"../Utils/computeProps\";\nimport _ from 'lodash';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar ColumnNB = function (_Component) {\n  _inherits(ColumnNB, _Component);\n\n  var _super = _createSuper(ColumnNB);\n\n  function ColumnNB() {\n    _classCallCheck(this, ColumnNB);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ColumnNB, [{\n    key: \"prepareRootProps\",\n    value: function prepareRootProps() {\n      var type = {\n        flexDirection: 'column',\n        flex: this.props.size ? this.props.size : this.props.style && this.props.style.width ? 0 : 1\n      };\n      var defaultProps = {\n        style: type\n      };\n      return computeProps(this.props, defaultProps);\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      if (this.props.onPress) {\n        return _jsx(TouchableOpacity, {\n          onPress: this.props.onPress,\n          children: _jsx(View, _objectSpread(_objectSpread(_objectSpread({\n            ref: function ref(component) {\n              return _this._root = component;\n            }\n          }, this.props), this.prepareRootProps()), {}, {\n            children: this.props.children\n          }))\n        });\n      } else {\n        return _jsx(View, _objectSpread(_objectSpread(_objectSpread({\n          ref: function ref(component) {\n            return _this._root = component;\n          }\n        }, this.props), this.prepareRootProps()), {}, {\n          children: this.props.children\n        }));\n      }\n    }\n  }]);\n\n  return ColumnNB;\n}(Component);\n\nexport { ColumnNB as default };","map":{"version":3,"sources":["/Users/romaineallen/codeC/ccp2/projects/quiz-react-native/node_modules/react-native-grid-layout/Components/Col.js"],"names":["React","Component","computeProps","_","ColumnNB","type","flexDirection","flex","props","size","style","width","defaultProps","nativeProps","_root","setNativeProps","onPress","component","prepareRootProps","children"],"mappings":"AACA;;;;;;;;;;;;;;;;;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,OAAOC,YAAP;AACA,OAAOC,CAAP,MAAc,QAAd;;;IAGqBC,Q;;;;;;;;;;;;;WACjB,4BAAmB;AAEf,UAAIC,IAAI,GAAG;AACVC,QAAAA,aAAa,EAAE,QADL;AAEVC,QAAAA,IAAI,EAAG,KAAKC,KAAL,CAAWC,IAAZ,GAAoB,KAAKD,KAAL,CAAWC,IAA/B,GAAuC,KAAKD,KAAL,CAAWE,KAAX,IAAoB,KAAKF,KAAL,CAAWE,KAAX,CAAiBC,KAAtC,GAA+C,CAA/C,GAAmD;AAFrF,OAAX;AAKA,UAAIC,YAAY,GAAG;AACfF,QAAAA,KAAK,EAAEL;AADQ,OAAnB;AAGA,aAAOH,YAAY,CAAC,KAAKM,KAAN,EAAaI,YAAb,CAAnB;AAEH;;;WAED,wBAAeC,WAAf,EAA4B;AAC1B,WAAKC,KAAL,CAAWC,cAAX,CAA0BF,WAA1B;AACD;;;WAEH,kBAAS;AAAA;;AACP,UAAG,KAAKL,KAAL,CAAWQ,OAAd,EAAsB;AACpB,eACE,KAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE,KAAKR,KAAL,CAAWQ,OAAtC;AAAA,oBACJ,KAAC,IAAD;AACE,YAAA,GAAG,EAAE,aAAAC,SAAS;AAAA,qBAAI,KAAI,CAACH,KAAL,GAAaG,SAAjB;AAAA;AADhB,aAEM,KAAKT,KAFX,GAGM,KAAKU,gBAAL,EAHN;AAAA,sBAIE,KAAKV,KAAL,CAAWW;AAJb;AADI,UADF;AASD,OAVD,MAWI;AACF,eACE,KAAC,IAAD;AACF,UAAA,GAAG,EAAE,aAAAF,SAAS;AAAA,mBAAI,KAAI,CAACH,KAAL,GAAaG,SAAjB;AAAA;AADZ,WAEE,KAAKT,KAFP,GAGE,KAAKU,gBAAL,EAHF;AAAA,oBAIF,KAAKV,KAAL,CAAWW;AAJT,WADF;AAOD;AACF;;;;EAxCmClB,S;;SAAjBG,Q","sourcesContent":["/* @flow */\n'use strict';\n\nimport React, {Component} from 'react';\nimport {View, TouchableOpacity} from 'react-native';\nimport computeProps from '../Utils/computeProps';\nimport _ from 'lodash';\n\n\nexport default class ColumnNB extends Component {\n    prepareRootProps() {\n\n        var type = {\n        \tflexDirection: 'column',\n        \tflex: (this.props.size) ? this.props.size : (this.props.style && this.props.style.width) ? 0 : 1,\n        }\n\n        var defaultProps = {\n            style: type\n        }\n        return computeProps(this.props, defaultProps);\n\n    }\n\n    setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n\n  render() {\n    if(this.props.onPress){\n      return(\n        <TouchableOpacity onPress={this.props.onPress}>\n    <View\n      ref={component => this._root = component}\n      {...this.props}\n      {...this.prepareRootProps()}\n    >{this.props.children}</View>\n      </TouchableOpacity>\n    );\n    }\n    else{\n      return(\n        <View\n      ref={component => this._root = component}\n      {...this.props}\n      {...this.prepareRootProps()}\n    >{this.props.children}</View>\n    );\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}