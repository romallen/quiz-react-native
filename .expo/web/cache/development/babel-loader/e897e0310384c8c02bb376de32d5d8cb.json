{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { polyfill } from 'react-lifecycles-compat';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CardFlip = function (_Component) {\n  _inherits(CardFlip, _Component);\n\n  var _super = _createSuper(CardFlip);\n\n  function CardFlip(props) {\n    var _this;\n\n    _classCallCheck(this, CardFlip);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      duration: 5000,\n      side: 0,\n      sides: [],\n      progress: new Animated.Value(0),\n      rotation: new Animated.ValueXY({\n        x: 50,\n        y: 50\n      }),\n      zoom: new Animated.Value(0),\n      rotateOrientation: \"\",\n      flipDirection: \"y\"\n    };\n    return _this;\n  }\n\n  _createClass(CardFlip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        duration: this.props.duration,\n        flipZoom: this.props.flipZoom,\n        sides: this.props.children\n      });\n    }\n  }, {\n    key: \"tip\",\n    value: function tip(customConfig) {\n      var defaultConfig = {\n        direction: \"left\",\n        progress: 0.05,\n        duration: 150\n      };\n\n      var config = _objectSpread(_objectSpread({}, defaultConfig), customConfig);\n\n      var direction = config.direction,\n          progress = config.progress,\n          duration = config.duration;\n      var _this$state = this.state,\n          rotation = _this$state.rotation,\n          side = _this$state.side;\n      var sequence = [];\n\n      if (direction === \"right\") {\n        sequence.push(Animated.timing(rotation, {\n          toValue: {\n            x: 0,\n            y: side === 0 ? 50 + progress * 50 : 90\n          },\n          duration: duration,\n          useNativeDriver: true\n        }));\n      } else {\n        sequence.push(Animated.timing(rotation, {\n          toValue: {\n            x: 0,\n            y: side === 0 ? 50 - progress * 50 : 90\n          },\n          duration: duration,\n          useNativeDriver: true\n        }));\n      }\n\n      sequence.push(Animated.timing(rotation, {\n        toValue: {\n          x: 0,\n          y: side === 0 ? 50 : 100\n        },\n        duration: duration,\n        useNativeDriver: true\n      }));\n      Animated.sequence(sequence).start();\n    }\n  }, {\n    key: \"jiggle\",\n    value: function jiggle() {\n      var customConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var defaultConfig = {\n        count: 2,\n        duration: 100,\n        progress: 0.05\n      };\n\n      var config = _objectSpread(_objectSpread({}, defaultConfig), customConfig);\n\n      var count = config.count,\n          duration = config.duration,\n          progress = config.progress;\n      var _this$state2 = this.state,\n          rotation = _this$state2.rotation,\n          side = _this$state2.side;\n      var sequence = [];\n\n      for (var i = 0; i < count; i++) {\n        sequence.push(Animated.timing(rotation, {\n          toValue: {\n            x: 0,\n            y: side === 0 ? 50 + progress * 50 : 90\n          },\n          duration: duration,\n          useNativeDriver: true\n        }));\n        sequence.push(Animated.timing(rotation, {\n          toValue: {\n            x: 0,\n            y: side === 0 ? 50 - progress * 50 : 110\n          },\n          duration: duration,\n          useNativeDriver: true\n        }));\n      }\n\n      sequence.push(Animated.timing(rotation, {\n        toValue: {\n          x: 0,\n          y: side === 0 ? 50 : 100\n        },\n        duration: duration,\n        useNativeDriver: true\n      }));\n      Animated.sequence(sequence).start();\n    }\n  }, {\n    key: \"flip\",\n    value: function flip() {\n      if (this.props.flipDirection == \"y\") {\n        this.flipY();\n      } else {\n        this.flipX();\n      }\n    }\n  }, {\n    key: \"flipY\",\n    value: function flipY() {\n      var side = this.state.side;\n\n      this._flipTo({\n        x: 50,\n        y: side === 0 ? 100 : 50\n      });\n\n      this.setState({\n        side: side === 0 ? 1 : 0,\n        rotateOrientation: \"y\"\n      });\n    }\n  }, {\n    key: \"flipX\",\n    value: function flipX() {\n      var side = this.state.side;\n\n      this._flipTo({\n        y: 50,\n        x: side === 0 ? 100 : 50\n      });\n\n      this.setState({\n        side: side === 0 ? 1 : 0,\n        rotateOrientation: 'x'\n      });\n    }\n  }, {\n    key: \"_flipTo\",\n    value: function _flipTo(toValue) {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          duration = _this$state3.duration,\n          rotation = _this$state3.rotation,\n          progress = _this$state3.progress,\n          zoom = _this$state3.zoom,\n          side = _this$state3.side;\n      this.props.onFlip(side === 0 ? 1 : 0);\n      this.props.onFlipStart(side === 0 ? 1 : 0);\n      Animated.parallel([Animated.timing(progress, {\n        toValue: side === 0 ? 100 : 0,\n        duration: duration,\n        useNativeDriver: true\n      }), Animated.sequence([Animated.timing(zoom, {\n        toValue: 100,\n        duration: duration / 2,\n        useNativeDriver: true\n      }), Animated.timing(zoom, {\n        toValue: 0,\n        duration: duration / 2,\n        useNativeDriver: true\n      })]), Animated.timing(rotation, {\n        toValue: toValue,\n        duration: duration,\n        useNativeDriver: true\n      })]).start(function () {\n        _this2.props.onFlipEnd(side === 0 ? 1 : 0);\n      });\n    }\n  }, {\n    key: \"getCardATransformation\",\n    value: function getCardATransformation() {\n      var _this$state4 = this.state,\n          progress = _this$state4.progress,\n          rotation = _this$state4.rotation,\n          side = _this$state4.side,\n          rotateOrientation = _this$state4.rotateOrientation;\n      var sideAOpacity = progress.interpolate({\n        inputRange: [50, 51],\n        outputRange: [100, 0],\n        extrapolate: \"clamp\"\n      });\n      var sideATransform = {\n        opacity: sideAOpacity,\n        zIndex: side === 0 ? 1 : 0,\n        transform: [{\n          perspective: this.props.perspective\n        }]\n      };\n\n      if (rotateOrientation === \"x\") {\n        var aXRotation = rotation.x.interpolate({\n          inputRange: [0, 50, 100, 150],\n          outputRange: [\"-180deg\", \"0deg\", \"180deg\", \"0deg\"],\n          extrapolate: \"clamp\"\n        });\n        sideATransform.transform.push({\n          rotateX: aXRotation\n        });\n      } else {\n        var aYRotation = rotation.y.interpolate({\n          inputRange: [0, 50, 100, 150],\n          outputRange: [\"-180deg\", \"0deg\", \"180deg\", \"0deg\"],\n          extrapolate: \"clamp\"\n        });\n        sideATransform.transform.push({\n          rotateY: aYRotation\n        });\n      }\n\n      return sideATransform;\n    }\n  }, {\n    key: \"getCardBTransformation\",\n    value: function getCardBTransformation() {\n      var _this$state5 = this.state,\n          progress = _this$state5.progress,\n          rotation = _this$state5.rotation,\n          side = _this$state5.side,\n          rotateOrientation = _this$state5.rotateOrientation;\n      var sideBOpacity = progress.interpolate({\n        inputRange: [50, 51],\n        outputRange: [0, 100],\n        extrapolate: \"clamp\"\n      });\n      var sideBTransform = {\n        opacity: sideBOpacity,\n        zIndex: side === 0 ? 0 : 1,\n        transform: [{\n          perspective: -1 * this.props.perspective\n        }]\n      };\n      var bYRotation;\n\n      if (rotateOrientation === \"x\") {\n        var bXRotation = rotation.x.interpolate({\n          inputRange: [0, 50, 100, 150],\n          outputRange: [\"0deg\", \"-180deg\", \"-360deg\", \"180deg\"],\n          extrapolate: \"clamp\"\n        });\n        sideBTransform.transform.push({\n          rotateX: bXRotation\n        });\n      } else {\n        if (Platform.OS === \"ios\") {\n          bYRotation = rotation.y.interpolate({\n            inputRange: [0, 50, 100, 150],\n            outputRange: [\"0deg\", \"180deg\", \"0deg\", \"-180deg\"],\n            extrapolate: \"clamp\"\n          });\n        } else {\n          bYRotation = rotation.y.interpolate({\n            inputRange: [0, 50, 100, 150],\n            outputRange: [\"0deg\", \"-180deg\", \"0deg\", \"180deg\"],\n            extrapolate: \"clamp\"\n          });\n        }\n\n        sideBTransform.transform.push({\n          rotateY: bYRotation\n        });\n      }\n\n      return sideBTransform;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state6 = this.state,\n          side = _this$state6.side,\n          progress = _this$state6.progress,\n          rotateOrientation = _this$state6.rotateOrientation,\n          zoom = _this$state6.zoom,\n          sides = _this$state6.sides;\n      var flipZoom = this.props.flipZoom;\n      var cardATransform = this.getCardATransformation();\n      var cardBTransform = this.getCardBTransformation();\n      var cardZoom = zoom.interpolate({\n        inputRange: [0, 100],\n        outputRange: [1, 1 + flipZoom],\n        extrapolate: \"clamp\"\n      });\n      var scaling = {\n        transform: [{\n          scale: cardZoom\n        }]\n      };\n      return _jsxs(Animated.View, {\n        style: [this.props.style, scaling],\n        children: [_jsx(Animated.View, {\n          style: [styles.cardContainer, cardATransform],\n          children: sides[0]\n        }), _jsx(Animated.View, {\n          style: [styles.cardContainer, cardBTransform],\n          children: sides[1]\n        })]\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.duration !== prevState.duration || nextProps.flipZoom !== prevState.flipZoom || nextProps.children !== prevState.sides) {\n        return {\n          duration: nextProps.duration,\n          flipZoom: nextProps.flipZoom,\n          sides: nextProps.children\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CardFlip;\n}(Component);\n\nvar styles = StyleSheet.create({\n  cardContainer: {\n    flex: 1,\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0\n  }\n});\nCardFlip.defaultProps = {\n  style: {},\n  duration: 500,\n  flipZoom: 0.09,\n  flipDirection: \"y\",\n  perspective: 800,\n  onFlip: function onFlip() {},\n  onFlipStart: function onFlipStart() {},\n  onFlipEnd: function onFlipEnd() {}\n};\nCardFlip.propTypes = {\n  style: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  duration: PropTypes.number,\n  flipZoom: PropTypes.number,\n  flipDirection: PropTypes.string,\n  onFlip: PropTypes.func,\n  onFlipEnd: PropTypes.func,\n  onFlipStart: PropTypes.func,\n  perspective: PropTypes.number\n};\npolyfill(CardFlip);\nexport default CardFlip;","map":{"version":3,"sources":["/Users/romaineallen/codeC/ccp2/projects/quiz-react-native/node_modules/react-native-card-flip/CardFlip.js"],"names":["React","Component","PropTypes","polyfill","CardFlip","props","state","duration","side","sides","progress","Animated","Value","rotation","ValueXY","x","y","zoom","rotateOrientation","flipDirection","setState","flipZoom","children","customConfig","defaultConfig","direction","config","sequence","push","timing","toValue","useNativeDriver","start","count","i","flipY","flipX","_flipTo","onFlip","onFlipStart","parallel","onFlipEnd","sideAOpacity","interpolate","inputRange","outputRange","extrapolate","sideATransform","opacity","zIndex","transform","perspective","aXRotation","rotateX","aYRotation","rotateY","sideBOpacity","sideBTransform","bYRotation","bXRotation","Platform","OS","cardATransform","getCardATransformation","cardBTransform","getCardBTransformation","cardZoom","scaling","scale","style","styles","cardContainer","nextProps","prevState","StyleSheet","create","flex","position","left","right","bottom","top","defaultProps","propTypes","oneOfType","number","object","array","string","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { polyfill } from 'react-lifecycles-compat';\n\nimport { Platform, StyleSheet, Animated } from \"react-native\";\n\nclass CardFlip extends Component<Props> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      duration: 5000,\n      side: 0,\n      sides: [],\n      progress: new Animated.Value(0),\n      rotation: new Animated.ValueXY({ x: 50, y: 50 }),\n      zoom: new Animated.Value(0),\n      rotateOrientation: \"\",\n      flipDirection: \"y\"\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.duration !== prevState.duration ||\n      nextProps.flipZoom !== prevState.flipZoom ||\n      nextProps.children !== prevState.sides) {\n      return {\n        duration: nextProps.duration,\n        flipZoom: nextProps.flipZoom,\n        sides: nextProps.children\n      }\n    }\n    return null;\n  }\n\n\n  componentDidMount() {\n    this.setState({\n      duration: this.props.duration,\n      flipZoom: this.props.flipZoom,\n      sides: this.props.children\n    });\n  }\n\n\n  tip(customConfig) {\n    const defaultConfig = { direction: \"left\", progress: 0.05, duration: 150 };\n    const config = { ...defaultConfig, ...customConfig };\n    const { direction, progress, duration } = config;\n\n    const { rotation, side } = this.state;\n    const sequence = [];\n\n    if (direction === \"right\") {\n      sequence.push(\n        Animated.timing(rotation, {\n          toValue: {\n            x: 0,\n            y: side === 0 ? 50 + progress * 50 : 90\n          },\n          duration,\n          useNativeDriver: true\n        })\n      );\n    } else {\n      sequence.push(\n        Animated.timing(rotation, {\n          toValue: {\n            x: 0,\n            y: side === 0 ? 50 - progress * 50 : 90\n          },\n          duration,\n          useNativeDriver: true\n        })\n      );\n    }\n    sequence.push(\n      Animated.timing(rotation, {\n        toValue: {\n          x: 0,\n          y: side === 0 ? 50 : 100\n        },\n        duration,\n        useNativeDriver: true\n      })\n    );\n    Animated.sequence(sequence).start();\n  }\n\n  jiggle(customConfig = {}) {\n    const defaultConfig = { count: 2, duration: 100, progress: 0.05 };\n    const config = { ...defaultConfig, ...customConfig };\n\n    const { count, duration, progress } = config;\n\n    const { rotation, side } = this.state;\n\n    const sequence = [];\n    for (let i = 0; i < count; i++) {\n      sequence.push(\n        Animated.timing(rotation, {\n          toValue: {\n            x: 0,\n            y: side === 0 ? 50 + progress * 50 : 90\n          },\n          duration,\n          useNativeDriver: true\n        })\n      );\n\n      sequence.push(\n        Animated.timing(rotation, {\n          toValue: {\n            x: 0,\n            y: side === 0 ? 50 - progress * 50 : 110\n          },\n          duration,\n          useNativeDriver: true\n        })\n      );\n    }\n    sequence.push(\n      Animated.timing(rotation, {\n        toValue: {\n          x: 0,\n          y: side === 0 ? 50 : 100\n        },\n        duration,\n        useNativeDriver: true\n      })\n    );\n    Animated.sequence(sequence).start();\n  }\n\n  flip() {\n    if (this.props.flipDirection == \"y\") {\n      this.flipY();\n    } else {\n      this.flipX();\n    }\n  }\n\n  flipY() {\n    const { side } = this.state;\n    this._flipTo({\n      x: 50,\n      y: side === 0 ? 100 : 50\n    });\n    this.setState({\n      side: side === 0 ? 1 : 0,\n      rotateOrientation: \"y\"\n    });\n  }\n\n  flipX() {\n    const { side } = this.state;\n    this._flipTo({\n      y: 50,\n      x: side === 0 ? 100 : 50\n    });\n    this.setState({\n      side: (side === 0) ? 1 : 0,\n      rotateOrientation: 'x',\n    });\n  }\n\n  _flipTo(toValue) {\n    const { duration, rotation, progress, zoom, side } = this.state;\n    this.props.onFlip(side === 0 ? 1 : 0);\n    this.props.onFlipStart(side === 0 ? 1 : 0);\n    Animated.parallel([\n      Animated.timing(progress, {\n        toValue: side === 0 ? 100 : 0,\n        duration,\n        useNativeDriver: true\n      }),\n      Animated.sequence([\n        Animated.timing(zoom, {\n          toValue: 100,\n          duration: duration / 2,\n          useNativeDriver: true\n        }),\n        Animated.timing(zoom, {\n          toValue: 0,\n          duration: duration / 2,\n          useNativeDriver: true\n        })\n      ]),\n      Animated.timing(rotation, {\n        toValue,\n        duration: duration,\n        useNativeDriver: true\n      })\n    ]).start(() => {\n      this.props.onFlipEnd(side === 0 ? 1 : 0);\n    });\n  }\n\n  getCardATransformation() {\n    //0, 50, 100\n    const { progress, rotation, side, rotateOrientation } = this.state;\n\n    const sideAOpacity = progress.interpolate({\n      inputRange: [50, 51],\n      outputRange: [100, 0],\n      extrapolate: \"clamp\"\n    });\n\n    const sideATransform = {\n      opacity: sideAOpacity,\n      zIndex: side === 0 ? 1 : 0,\n      transform: [{ perspective: this.props.perspective }]\n    };\n    if (rotateOrientation === \"x\") {\n      const aXRotation = rotation.x.interpolate({\n        inputRange: [0, 50, 100, 150],\n        outputRange: [\"-180deg\", \"0deg\", \"180deg\", \"0deg\"],\n        extrapolate: \"clamp\"\n      });\n      sideATransform.transform.push({ rotateX: aXRotation });\n    } else {\n      // cardA Y-rotation\n      const aYRotation = rotation.y.interpolate({\n        inputRange: [0, 50, 100, 150],\n        outputRange: [\"-180deg\", \"0deg\", \"180deg\", \"0deg\"],\n        extrapolate: \"clamp\"\n      });\n      sideATransform.transform.push({ rotateY: aYRotation });\n    }\n    return sideATransform;\n  }\n\n  getCardBTransformation() {\n    const { progress, rotation, side, rotateOrientation } = this.state;\n\n    const sideBOpacity = progress.interpolate({\n      inputRange: [50, 51],\n      outputRange: [0, 100],\n      extrapolate: \"clamp\"\n    });\n\n    const sideBTransform = {\n      opacity: sideBOpacity,\n      zIndex: side === 0 ? 0 : 1,\n      transform: [{ perspective: -1 * this.props.perspective }]\n    };\n    let bYRotation;\n    if (rotateOrientation === \"x\") {\n      const bXRotation = rotation.x.interpolate({\n        inputRange: [0, 50, 100, 150],\n        outputRange: [\"0deg\", \"-180deg\", \"-360deg\", \"180deg\"],\n        extrapolate: \"clamp\"\n      });\n      sideBTransform.transform.push({ rotateX: bXRotation });\n    } else {\n      if (Platform.OS === \"ios\") {\n        // cardB Y-rotation\n        bYRotation = rotation.y.interpolate({\n          inputRange: [0, 50, 100, 150],\n          outputRange: [\"0deg\", \"180deg\", \"0deg\", \"-180deg\"],\n          extrapolate: \"clamp\"\n        });\n      } else {\n        // cardB Y-rotation\n        bYRotation = rotation.y.interpolate({\n          inputRange: [0, 50, 100, 150],\n          outputRange: [\"0deg\", \"-180deg\", \"0deg\", \"180deg\"],\n          extrapolate: \"clamp\"\n        });\n      }\n      sideBTransform.transform.push({ rotateY: bYRotation });\n    }\n    return sideBTransform;\n  }\n\n  render() {\n    const { side, progress, rotateOrientation, zoom, sides } = this.state;\n    const { flipZoom } = this.props;\n\n    // Handle cardA transformation\n    const cardATransform = this.getCardATransformation();\n\n    // Handle cardB transformation\n    const cardBTransform = this.getCardBTransformation();\n\n    // Handle cardPopup\n    const cardZoom = zoom.interpolate({\n      inputRange: [0, 100],\n      outputRange: [1, 1 + flipZoom],\n      extrapolate: \"clamp\"\n    });\n\n    const scaling = {\n      transform: [{ scale: cardZoom }]\n    };\n\n    return (\n      <Animated.View style={[this.props.style, scaling]}>\n        <Animated.View style={[styles.cardContainer, cardATransform]}>\n          {sides[0]}\n        </Animated.View>\n        <Animated.View style={[styles.cardContainer, cardBTransform]}>\n          {sides[1]}\n        </Animated.View>\n      </Animated.View>\n    );\n  }\n}\nconst styles = StyleSheet.create({\n  cardContainer: {\n    flex: 1,\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0\n  }\n});\n\nCardFlip.defaultProps = {\n  style: {},\n  duration: 500,\n  flipZoom: 0.09,\n  flipDirection: \"y\",\n  perspective: 800,\n  onFlip: () => { },\n  onFlipStart: () => { },\n  onFlipEnd: () => { }\n};\n\nCardFlip.propTypes = {\n  style: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.object,\n    PropTypes.array\n  ]),\n  duration: PropTypes.number,\n  flipZoom: PropTypes.number,\n  flipDirection: PropTypes.string,\n  onFlip: PropTypes.func,\n  onFlipEnd: PropTypes.func,\n  onFlipStart: PropTypes.func,\n  perspective: PropTypes.number\n};\n\npolyfill(CardFlip)\nexport default CardFlip "]},"metadata":{},"sourceType":"module"}