{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Card from \"../components/card\";\nimport { useState } from \"react\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button } from \"react-native-elements\";\nimport { SectionGrid } from 'react-native-super-grid';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PlayScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSelected = _useState2[0],\n      setSelection = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      questions = _useState4[0],\n      setQuestions = _useState4[1];\n\n  console.log(\"This is the Game\");\n\n  var handleBackPress = function handleBackPress() {\n    console.log(\"Go to Welcome\");\n    props.setCurrentView(\"WelcomeScreen\");\n  };\n\n  var handleStartGamePress = function handleStartGamePress() {\n    console.log(\"Start the Game\");\n    props.setGameSettings({\n      categories: isSelected.map(function (sel) {\n        return sel.value;\n      })\n    });\n    props.setCurrentView(\"PlayGame\");\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Play GAme!!!\"\n    }), _jsx(SectionGrid, {\n      itemDimension: 130,\n      sections: [{\n        title: 'Numbers',\n        data: [1, 2, 3, 4, 5, 6]\n      }, {\n        title: 'Alphabets',\n        data: ['A', 'B', 'C', 'D', 'E']\n      }],\n      horizontal: false,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(Text, {\n          children: item\n        });\n      },\n      renderSectionHeader: function renderSectionHeader(_ref2) {\n        var section = _ref2.section;\n        return _jsx(Text, {\n          style: {\n            fontSize: 20\n          },\n          children: section.title\n        });\n      }\n    }), _jsx(Button, {\n      onPress: handleStartGamePress,\n      title: \"Start the Game\",\n      color: \"#841584\",\n      accessibilityLabel: \"Questions\"\n    }), _jsx(Button, {\n      onPress: handleBackPress,\n      title: \"RETURN TO HOME SCREEN\",\n      color: \"#841584\",\n      accessibilityLabel: \"GO BACK!\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {},\n  title: {\n    fontSize: 60,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  teams: {\n    fontSize: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  button: {\n    fontSize: 40,\n    paddingBottom: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/romaineallen/codeC/ccp2/projects/quiz-react-native/app/screens/playScreen.js"],"names":["Card","useState","Button","SectionGrid","PlayScreen","props","isSelected","setSelection","questions","setQuestions","console","log","handleBackPress","setCurrentView","handleStartGamePress","setGameSettings","categories","map","sel","value","styles","container","title","data","item","section","fontSize","StyleSheet","create","alignItems","justifyContent","teams","button","paddingBottom"],"mappings":"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","sourcesContent":["\nimport Card from \"../components/card\"\nimport {useState} from \"react\";\nimport { StatusBar, StyleSheet, Text, View } from \"react-native\";\nimport { Button } from \"react-native-elements\";\nimport { SectionGrid } from 'react-native-super-grid';\n\nexport default function PlayScreen(props) {\n  \n    const [isSelected, setSelection] = useState([]);\n    const [questions, setQuestions] = useState([])\n\n  \n\n    console.log(\"This is the Game\" );\n\n    const handleBackPress = () => {\n      console.log(\"Go to Welcome\");\n      props.setCurrentView(\"WelcomeScreen\");\n    };\n    const handleStartGamePress = () => {\n      console.log(\"Start the Game\");\n  \n      props.setGameSettings({ categories: isSelected.map((sel) => sel.value) });\n      props.setCurrentView(\"PlayGame\");\n    };\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>Play GAme!!!</Text>\n       {/* <Card question={\"question\"} answer={\"answer\"} points={\"100\"}/> */}\n       <SectionGrid\n            itemDimension={130}\n            sections={[\n              {\n                title: 'Numbers',\n                data: [1,2,3,4,5,6],\n              },\n              {\n                title: 'Alphabets',\n                data: ['A', 'B', 'C', 'D', 'E'],\n              },\n            ]}\n            horizontal = {false}\n            renderItem={({ item }) => (<Text>{item}</Text>)}\n            renderSectionHeader={({ section }) => (\n              <Text style={{ fontSize: 20 }}>{section.title}</Text>\n            )}\n        />\n        <Button\n          onPress={handleStartGamePress}\n          title=\"Start the Game\"\n          color=\"#841584\"\n          accessibilityLabel=\"Questions\"\n        />\n        <Button\n          onPress={handleBackPress}\n          title=\"RETURN TO HOME SCREEN\"\n          color=\"#841584\"\n          accessibilityLabel=\"GO BACK!\"\n        />\n  \n      \n      </View>\n    );\n  }\n\n\n  const styles = StyleSheet.create({\n    container: {\n      // flex: 1,\n      //backgroundColor: \"#ddf\",\n    },\n    title: {\n      fontSize: 60,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    teams: {\n      fontSize: 20,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    button: {\n      fontSize: 40,\n      paddingBottom: 20,\n       alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n  });"]},"metadata":{},"sourceType":"module"}