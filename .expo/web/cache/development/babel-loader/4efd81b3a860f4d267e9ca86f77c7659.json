{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Card from \"../components/card\";\nimport { useState, createRef } from \"react\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { Button } from \"react-native-elements\";\nimport { Table, TableWrapper, Row, Rows, Col, Cols, Cell } from 'react-native-table-component';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PlayScreen(props) {\n  var _useWindowDimensions = useWindowDimensions(),\n      height = _useWindowDimensions.height,\n      width = _useWindowDimensions.width;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSelected = _useState2[0],\n      setSelection = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      questions = _useState4[0],\n      setQuestions = _useState4[1];\n\n  var data = [{\n    \"category\": \"React 101\",\n    \"questions\": [{\n      \"points\": 100,\n      \"question\": \"<p>What part of your application does React focus on?</p><ol><li>The Model</li><li>The View</li><li>The Controller</li><li>All of the above</li></ol>\",\n      \"answer\": \"B. The View\"\n    }, {\n      \"points\": 200,\n      \"question\": \"_____ lets you create JavaScript objects using HTML syntax\",\n      \"answer\": \"JSX\"\n    }, {\n      \"points\": 300,\n      \"question\": \"What tool can you use to transpile JSX?\",\n      \"answer\": \"Babel\"\n    }, {\n      \"points\": 400,\n      \"question\": \"React uses a _____________ to limit direct manipulation of the DOM and improve performance\",\n      \"answer\": \"Virtual DOM\"\n    }]\n  }, {\n    \"category\": \"React 201\",\n    \"questions\": [{\n      \"points\": 100,\n      \"question\": \"<p>Where can you define a component's initial state when you use the ES6 Class syntax?</p><ol><li>getInitialState()</li><li>getInitialProps()</li><li>The component's constructor</li></ol>\",\n      \"answer\": \"C. The component's constructor\"\n    }, {\n      \"points\": 200,\n      \"question\": \"Using npm, which package should you require/import in addition to 'react' to render a React component in an existing DOM element of your HTML file?\",\n      \"answer\": \"react-dom\"\n    }, {\n      \"points\": 300,\n      \"question\": \"<p>Which lifecycle function should you use to set default property values?</p><ol><li>getInitialState</li><li>getInitialProps</li><li>getDefaultProps</li></ol>\",\n      \"answer\": \"C. getDefaultProps\"\n    }, {\n      \"points\": 400,\n      \"question\": \"Which lifecycle method is invoked once, immediately after the initial rendering occurs?\",\n      \"answer\": \"componentDidMount\"\n    }]\n  }, {\n    \"category\": \"ES 2015\",\n    \"questions\": [{\n      \"points\": 100,\n      \"question\": \"<p>Constants (const) are:</p><ol><li>Block scoped</li><li>Function scoped</li><li>Global</li></ol>\",\n      \"answer\": \"A. Block scoped\"\n    }, {\n      \"points\": 200,\n      \"question\": \"Name 3 new collection classes in ES2015\",\n      \"answer\": \"<ul><li>Map</li><li>WeakMap</li><li>Set</li><li>WeakSet</li></ul>\"\n    }, {\n      \"points\": 300,\n      \"question\": \"<p>What's being logged and how is this new ES6 feature called?</p><code>var colors = ['red', 'blue', 'green'];<br/>var [primary, secondary, tertiary] = colors;<br/>console.log(secondary);</code>\",\n      \"answer\": \"<ul><li>blue</li><li>Array destructuring</li></ul>\"\n    }, {\n      \"points\": 400,\n      \"question\": \"<p>What's being logged and name 4 new features of ES6 used in this code snippet?</p><code>let greeting = (name, msg='Hello') => `${msg}, ${name}`;<br/>console.log(greeting('Christophe');</code>\",\n      \"answer\": \"<p>Hello, Christophe</p><ul><li>let variables</li><li>Arrow functions</li><li>Default parameters</li><li>Template strings</li></ul>\"\n    }]\n  }, {\n    \"category\": \"Feeling Lucky\",\n    \"questions\": [{\n      \"points\": 100,\n      \"question\": \"Using the proposed ECMAScript module syntax, how do you load the Mortgage.js module from the current directory and make all its members available in an object named mortgage?\",\n      \"answer\": \"<code>import * as mortgage from './Mortgage';</code>\"\n    }, {\n      \"points\": 200,\n      \"question\": \"What are the colors of the olympic rings?\",\n      \"answer\": \"<img src='assets/img/olympic_rings.png'/>\"\n    }, {\n      \"points\": 300,\n      \"question\": \"What's the date of the first React commit on GitHub?\",\n      \"answer\": \"May 26th, 2013\"\n    }, {\n      \"points\": 400,\n      \"question\": \"What's the hex color of the React logo?\",\n      \"answer\": \"#61DAFB\"\n    }]\n  }];\n  var state = createRef(null);\n  console.log(\"This is the Game\", data);\n\n  var handleBackPress = function handleBackPress() {\n    console.log(\"Go to Welcome\");\n    props.setCurrentView(\"WelcomeScreen\");\n  };\n\n  var handleStartGamePress = function handleStartGamePress() {\n    console.log(\"Start the Game\");\n    props.setGameSettings({\n      categories: isSelected.map(function (sel) {\n        return sel.value;\n      })\n    });\n    props.setCurrentView(\"PlayGame\");\n  };\n\n  var tableHead = [];\n  data.forEach(function (el) {\n    return tableHead.push(el.category);\n  });\n  var tableData = [];\n\n  for (var i = 0; i < 4; i += 1) {\n    var rowData = [];\n\n    for (var j = 0; j < data.length; j += 1) {\n      rowData.push(_jsx(Card, {\n        question: data[j][\"questions\"][i][\"question\"],\n        answer: data[j][\"questions\"][i][\"answer\"]\n      }));\n    }\n\n    tableData.push(rowData);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Play Game!!!\"\n    }), _jsxs(Table, {\n      children: [_jsx(Row, {\n        data: tableHead,\n        style: styles.head\n      }), _jsx(Rows, {\n        data: tableData,\n        style: styles.card\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: width,\n    padding: 16,\n    paddingTop: 30,\n    backgroundColor: '#fff'\n  },\n  head: {\n    height: 40,\n    backgroundColor: '#f1f8ff'\n  },\n  text: {\n    margin: 6\n  },\n  title: {\n    fontSize: 60,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  button: {\n    fontSize: 40,\n    paddingBottom: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/romaineallen/codeC/ccp2/projects/quiz-react-native/app/screens/playScreen.js"],"names":["Card","useState","createRef","Button","Table","TableWrapper","Row","Rows","Col","Cols","Cell","PlayScreen","props","useWindowDimensions","height","width","isSelected","setSelection","questions","setQuestions","data","state","console","log","handleBackPress","setCurrentView","handleStartGamePress","setGameSettings","categories","map","sel","value","tableHead","forEach","el","push","category","tableData","i","rowData","j","length","styles","container","title","head","card","StyleSheet","create","flex","padding","paddingTop","backgroundColor","text","margin","fontSize","alignItems","justifyContent","button","paddingBottom"],"mappings":"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","sourcesContent":["\nimport Card from \"../components/card\"\nimport {useState,createRef} from \"react\";\nimport { SectionList, StatusBar, StyleSheet, Text, View,useWindowDimensions } from \"react-native\";\nimport { Button } from \"react-native-elements\";\nimport { Table, TableWrapper, Row, Rows, Col, Cols, Cell } from 'react-native-table-component';\n\n\nexport default function PlayScreen(props) {\n    const { height, width } = useWindowDimensions();\n    const [isSelected, setSelection] = useState([]);\n    const [questions, setQuestions] = useState([])\n    const data = [\n      {\n        \"category\": \"React 101\",\n        \"questions\": [\n          {\n            \"points\": 100,\n            \"question\": \"<p>What part of your application does React focus on?</p><ol><li>The Model</li><li>The View</li><li>The Controller</li><li>All of the above</li></ol>\",\n            \"answer\": \"B. The View\"\n          },\n          {\n            \"points\": 200,\n            \"question\": \"_____ lets you create JavaScript objects using HTML syntax\",\n            \"answer\": \"JSX\"\n          },\n          {\n            \"points\": 300,\n            \"question\": \"What tool can you use to transpile JSX?\",\n            \"answer\": \"Babel\"\n          },\n          {\n            \"points\": 400,\n            \"question\": \"React uses a _____________ to limit direct manipulation of the DOM and improve performance\",\n            \"answer\": \"Virtual DOM\"\n          }\n        ]\n      },\n      {\n        \"category\": \"React 201\",\n        \"questions\": [\n          {\n            \"points\": 100,\n            \"question\": \"<p>Where can you define a component's initial state when you use the ES6 Class syntax?</p><ol><li>getInitialState()</li><li>getInitialProps()</li><li>The component's constructor</li></ol>\",\n            \"answer\": \"C. The component's constructor\"\n          },\n          {\n            \"points\": 200,\n            \"question\": \"Using npm, which package should you require/import in addition to 'react' to render a React component in an existing DOM element of your HTML file?\",\n            \"answer\": \"react-dom\"\n          },\n          {\n            \"points\": 300,\n            \"question\": \"<p>Which lifecycle function should you use to set default property values?</p><ol><li>getInitialState</li><li>getInitialProps</li><li>getDefaultProps</li></ol>\",\n            \"answer\": \"C. getDefaultProps\"\n          },\n          {\n            \"points\": 400,\n            \"question\": \"Which lifecycle method is invoked once, immediately after the initial rendering occurs?\",\n            \"answer\": \"componentDidMount\"\n          }\n        ]\n      },\n      {\n        \"category\": \"ES 2015\",\n        \"questions\": [\n          {\n            \"points\": 100,\n            \"question\": \"<p>Constants (const) are:</p><ol><li>Block scoped</li><li>Function scoped</li><li>Global</li></ol>\",\n            \"answer\": \"A. Block scoped\"\n          },\n          {\n            \"points\": 200,\n            \"question\": \"Name 3 new collection classes in ES2015\",\n            \"answer\": \"<ul><li>Map</li><li>WeakMap</li><li>Set</li><li>WeakSet</li></ul>\"\n          },\n          {\n            \"points\": 300,\n            \"question\": \"<p>What's being logged and how is this new ES6 feature called?</p><code>var colors = ['red', 'blue', 'green'];<br/>var [primary, secondary, tertiary] = colors;<br/>console.log(secondary);</code>\",\n            \"answer\": \"<ul><li>blue</li><li>Array destructuring</li></ul>\"\n          },\n          {\n            \"points\": 400,\n            \"question\": \"<p>What's being logged and name 4 new features of ES6 used in this code snippet?</p><code>let greeting = (name, msg='Hello') => `${msg}, ${name}`;<br/>console.log(greeting('Christophe');</code>\",\n            \"answer\": \"<p>Hello, Christophe</p><ul><li>let variables</li><li>Arrow functions</li><li>Default parameters</li><li>Template strings</li></ul>\"\n          }\n        ]\n      },\n      {\n        \"category\": \"Feeling Lucky\",\n        \"questions\": [\n          {\n            \"points\": 100,\n            \"question\": \"Using the proposed ECMAScript module syntax, how do you load the Mortgage.js module from the current directory and make all its members available in an object named mortgage?\",\n            \"answer\": \"<code>import * as mortgage from './Mortgage';</code>\"\n          },\n          {\n            \"points\": 200,\n            \"question\": \"What are the colors of the olympic rings?\",\n            \"answer\": \"<img src='assets/img/olympic_rings.png'/>\"\n          },\n          {\n            \"points\": 300,\n            \"question\": \"What's the date of the first React commit on GitHub?\",\n            \"answer\": \"May 26th, 2013\"\n          },\n          {\n            \"points\": 400,\n            \"question\": \"What's the hex color of the React logo?\",\n            \"answer\": \"#61DAFB\"\n          }\n        ]\n      }\n    ];\n     \n    \n    const state = createRef(null)\n\n    console.log(\"This is the Game\", data );\n\n    const handleBackPress = () => {\n      console.log(\"Go to Welcome\");\n      props.setCurrentView(\"WelcomeScreen\");\n    };\n    const handleStartGamePress = () => {\n      console.log(\"Start the Game\");\n  \n      props.setGameSettings({ categories: isSelected.map((sel) => sel.value) });\n      props.setCurrentView(\"PlayGame\");\n    };\n//['Head', 'Head2', 'Head3', 'Head4']\n// ['1', '2', '3', '4'],\n//         ['a', 'b', 'c', 'd'],\n//         ['1', '2', '3', '456\\n789'],\n//         ['a', 'b', 'c', 'd']\n      let tableHead = []\n\n      data.forEach(el=> tableHead.push(el.category))\n\n      let tableData= []\n    //   data.forEach((category, categoryIndex) => {\n    //     category.questions.forEach((question, questionIndex) => {\n    //         tableData.push(<Card question={question} />);\n    //     })\n    // });\n      for (let i = 0; i < 4; i += 1) {\n      const rowData = [];\n      for (let j = 0; j < data.length; j += 1) {\n        rowData.push(<Card question={data[j][\"questions\"][i][\"question\"]} answer={data[j][\"questions\"][i][\"answer\"]} />);\n      }\n      tableData.push(rowData);\n    }\n  \n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>Play Game!!!</Text>\n\n        <Table >\n          <Row data={tableHead} style={styles.head} />\n          <Rows data={tableData} style={styles.card}/>\n        </Table>\n        {/* {cards} */}\n\n\n       {/* <Card question={\"question\"} answer={\"answer\"} points={\"100\"}/> */}\n   \n        {/* <Button\n          onPress={handleStartGamePress}\n          title=\"Start the Game\"\n          color=\"#841584\"\n          accessibilityLabel=\"Questions\"\n        />\n        <Button\n          onPress={handleBackPress}\n          title=\"RETURN TO HOME SCREEN\"\n          color=\"#841584\"\n          accessibilityLabel=\"GO BACK!\"\n        /> */}\n  \n      \n      </View>\n    );\n  }\n\n\n  const styles = StyleSheet.create({\n    container: { flex: 1, width: width, padding: 16, paddingTop: 30, backgroundColor: '#fff' },\n    head: { height: 40, backgroundColor: '#f1f8ff' },\n    text: { margin: 6 },\n    title: {\n      fontSize: 60,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    button: {\n      fontSize: 40,\n      paddingBottom: 20,\n       alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n\n  });"]},"metadata":{},"sourceType":"module"}