{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as audio from \"./audio\";\nimport { React, useState, useRef } from \"react\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Card } from \"react-native-elements\";\nimport CardFlip from 'react-native-card-flip';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function QuestionCard(props) {\n  var _this = this;\n\n  var _useState = useState({\n    view: 'points',\n    completed: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      cardState = _useState2[0],\n      setCardState = _useState2[1];\n\n  var cardRef = useRef();\n\n  var handleClick = function handleClick() {\n    console.log(\"card Pressed\");\n\n    if (cardState.view === 'points') {\n      audio.play(\"flip\");\n      setTimeout(function () {\n        if (cardState.view === \"question\") {\n          audio.play(\"countdown\");\n        }\n      }, 1800);\n      setCardState({\n        view: 'question',\n        flipping: true\n      });\n    } else if (cardState.view === 'question') {\n      audio.stop(\"countdown\");\n      setCardState({\n        view: 'answer'\n      });\n    } else {\n      audio.play(\"flipBack\");\n      setCardState({\n        view: 'points',\n        completed: true,\n        flipping: true\n      });\n    }\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(CardFlip, {\n      ref: function ref(cardRef) {\n        return cardRef = _this.card;\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return cardRef.flip();\n        },\n        children: _jsx(Text, {\n          children: \"AB\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return cardRef.flip();\n        },\n        children: _jsx(Text, {\n          children: \"CD\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {},\n  title: {\n    fontSize: 60,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  teams: {\n    fontSize: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  button: {\n    fontSize: 40,\n    paddingBottom: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/romaineallen/codeC/ccp2/projects/quiz-react-native/app/components/card.js"],"names":["audio","React","useState","useRef","Button","Card","CardFlip","QuestionCard","props","view","completed","cardState","setCardState","cardRef","handleClick","console","log","play","setTimeout","flipping","stop","styles","container","card","flip","StyleSheet","create","title","fontSize","alignItems","justifyContent","teams","button","paddingBottom"],"mappings":";AACA,OAAO,KAAKA,KAAZ;AACA,SAAQC,KAAR,EAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;;;;;AAEA,SAASC,MAAT,EAAgBC,IAAhB,QAA4B,uBAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACxC,kBAAkCN,QAAQ,CAAC;AAACO,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,SAAS,EAAE;AAA5B,GAAD,CAA1C;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,OAAO,GAAGV,MAAM,EAAtB;;AAEA,MAAMW,WAAW,GAAE,SAAbA,WAAa,GAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,QAAIL,SAAS,CAACF,IAAV,KAAmB,QAAvB,EAAiC;AAC7BT,MAAAA,KAAK,CAACiB,IAAN,CAAW,MAAX;AACAC,MAAAA,UAAU,CAAC,YAAM;AACb,YAAIP,SAAS,CAACF,IAAV,KAAmB,UAAvB,EAAmC;AAC/BT,UAAAA,KAAK,CAACiB,IAAN,CAAW,WAAX;AACH;AACJ,OAJS,EAIP,IAJO,CAAV;AAKAL,MAAAA,YAAY,CAAC;AAACH,QAAAA,IAAI,EAAE,UAAP;AAAmBU,QAAAA,QAAQ,EAAE;AAA7B,OAAD,CAAZ;AACH,KARD,MASK,IAAIR,SAAS,CAACF,IAAV,KAAmB,UAAvB,EAAmC;AACpCT,MAAAA,KAAK,CAACoB,IAAN,CAAW,WAAX;AACAR,MAAAA,YAAY,CAAC;AAACH,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAZ;AACH,KAHI,MAGE;AACHT,MAAAA,KAAK,CAACiB,IAAN,CAAW,UAAX;AACAL,MAAAA,YAAY,CAAC;AAACH,QAAAA,IAAI,EAAE,QAAP;AAAiBC,QAAAA,SAAS,EAAE,IAA5B;AAAkCS,QAAAA,QAAQ,EAAE;AAA5C,OAAD,CAAZ;AACH;AACF,GAlBC;;AAuBF,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA,cACI,MAAC,QAAD;AAAW,MAAA,GAAG,EAAE,aAACT,OAAD;AAAA,eAAaA,OAAO,GAAG,KAAI,CAACU,IAA5B;AAAA,OAAhB;AAAA,iBACJ,KAAC,gBAAD;AAAmB,QAAA,OAAO,EAAE;AAAA,iBAAMV,OAAO,CAACW,IAAR,EAAN;AAAA,SAA5B;AAAA,kBAAmD,KAAC,IAAD;AAAA;AAAA;AAAnD,QADI,EAEJ,KAAC,gBAAD;AAAmB,QAAA,OAAO,EAAE;AAAA,iBAAMX,OAAO,CAACW,IAAR,EAAN;AAAA,SAA5B;AAAA,kBAAmD,KAAC,IAAD;AAAA;AAAA;AAAnD,QAFI;AAAA;AADJ,IADF;AAUD;AAGD,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE,EADkB;AAK7BK,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE,QAFP;AAGLC,IAAAA,cAAc,EAAE;AAHX,GALsB;AAU7BC,EAAAA,KAAK,EAAE;AACLH,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE,QAFP;AAGLC,IAAAA,cAAc,EAAE;AAHX,GAVsB;AAe7BE,EAAAA,MAAM,EAAE;AACNJ,IAAAA,QAAQ,EAAE,EADJ;AAENK,IAAAA,aAAa,EAAE,EAFT;AAGLJ,IAAAA,UAAU,EAAE,QAHP;AAINC,IAAAA,cAAc,EAAE;AAJV;AAfqB,CAAlB,CAAf","sourcesContent":["\nimport * as audio from './audio';\nimport {React, useState, useRef} from \"react\";\nimport { StatusBar, StyleSheet, Text, View } from \"react-native\";\nimport { Button,Card } from \"react-native-elements\";\nimport CardFlip from 'react-native-card-flip';\n\nexport default function QuestionCard(props) {\n    const [cardState, setCardState] = useState({view: 'points', completed: false})\n    const cardRef = useRef()\n  \n    const handleClick= () => {\n    console.log(\"card Pressed\");\n    if (cardState.view === 'points') {\n        audio.play(\"flip\");\n        setTimeout(() => {\n            if (cardState.view === \"question\") {\n                audio.play(\"countdown\");\n            }\n        }, 1800);\n        setCardState({view: 'question', flipping: true});\n    } \n    else if (cardState.view === 'question') {\n        audio.stop(\"countdown\");\n        setCardState({view: 'answer'});\n    } else {\n        audio.play(\"flipBack\");\n        setCardState({view: 'points', completed: true, flipping: true});\n    }\n  };\n\n\n\n\n  return (\n    <View style={styles.container}>\n        <CardFlip  ref={(cardRef) => cardRef = this.card} >\n    <TouchableOpacity  onPress={() => cardRef.flip()} ><Text>AB</Text></TouchableOpacity>\n    <TouchableOpacity  onPress={() => cardRef.flip()} ><Text>CD</Text></TouchableOpacity>\n  </CardFlip>\n\n\n    </View>\n  )\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n      // flex: 1,\n      //backgroundColor: \"#ddf\",\n    },\n    title: {\n      fontSize: 60,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    teams: {\n      fontSize: 20,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    button: {\n      fontSize: 40,\n      paddingBottom: 20,\n       alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n  });"]},"metadata":{},"sourceType":"module"}